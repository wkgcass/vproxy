import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'application'
    id 'idea'
}

group 'vproxy'
version loadVersion()

mainClassName = 'vproxyapp.app.Main'

jar {
    archiveName 'vproxy.jar'
    manifest {
        attributes 'Main-Class': mainClassName
    }
    exclude 'module-info.class'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 11.0
    targetCompatibility = 11.0
    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

project(':base') {
    compileJava.options.compilerArgs += '--add-exports=java.base/jdk.internal.misc=vproxy.base'

    dependencies {
    }
}

project(':core') {
    dependencies {
        compile project(':base')
    }
}

project(':lib') {
    dependencies {
        compile project(':base')
        compile project(':core')
    }
}

project(':extended') {
    dependencies {
        compile project(':base')
        compile project(':core')
        compile project(':lib')
    }
}

project(':app') {
    dependencies {
        compile project(':base')
        compile project(':core')
        compile project(':lib')
        compile project(':extended')
    }
}

project(':test') {
    dependencies {
        compile project(':base')
        compile project(':core')
        compile project(':extended')
        compile project(':lib')
        compile project(':app')

        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'io.vertx', name: 'vertx-redis-client', version: '3.7.0'
        testCompile group: 'io.vertx', name: 'vertx-web-client', version: '3.7.0'
        testCompile group: 'io.grpc', name: 'grpc-all', version: '1.20.0'
        testCompile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
        testCompile group: 'org.apache.thrift', name: 'libthrift', version: '0.11.0'
        testCompile group: 'com.alibaba', name: 'dubbo', version: '2.6.6'
    }

    task runSuite(type: Test) {
        jvmArgs += '--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED'

        testLogging {
            events TestLogEvent.FAILED, TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.STARTED
            maxGranularity 100
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
        }

        include '**/VSuite.class'
    }

    task runCI(type: Test) {
        jvmArgs += '--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED'

        testLogging {
            events TestLogEvent.FAILED, TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.STARTED
            maxGranularity 100
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
        }

        include '**/CI.class'
    }

    task runTest {
        dependsOn clean
        dependsOn runSuite
        dependsOn runCI
    }
}

dependencies {
    compile project(':app')
    testCompile project(':test')
}

def loadVersion() {
    def PREFIX = "public static final String VERSION = \""
    def SUFFIX = "\"; // _THE_VERSION_"
    def ver = file(projectDir.getAbsolutePath() + "/base/src/main/java/vproxybase/util/Version.java")
    def lines = ver.getText().split("\n")
    for (def line : lines) {
        line = line.trim()
        if (line.startsWith(PREFIX) && line.endsWith(SUFFIX)) {
            return line.substring(PREFIX.length(), line.length() - SUFFIX.length())
        }
    }
    return "unknown"
}
